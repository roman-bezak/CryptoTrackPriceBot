name: Staging Deploy

on:
  push:
    branches: [ dev ]

env:
  # Environment variables
  DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
  VPS_WORKDIR: ${{ vars.VPS_WORKDIR }}

  # Secrets
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_REPO_NAME: ${{ secrets.DOCKERHUB_REPO_NAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  VPS_HOST: ${{ secrets.VPS_HOST }}
  VPS_USER: ${{ secrets.VPS_USER }}
  VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}

jobs:
  setup:
    runs-on: ubuntu-latest
    environment: staging
    outputs:
      env-file: ${{ steps.create-env.outputs.env-file }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        id: create-env
        run: |
          {
            echo "DEPLOY_ENV=${DEPLOY_ENV}"
            echo "DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}"
            echo "DOCKERHUB_REPO_NAME=${DOCKERHUB_REPO_NAME}"
            echo "DOCKERHUB_TOKEN=${DOCKERHUB_TOKEN}"
            echo "VPS_HOST=${VPS_HOST}"
            echo "VPS_USER=${VPS_USER}"
            echo "VPS_WORKDIR=${VPS_WORKDIR}"
            echo "DEPLOY_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          } > .env
          echo "env-file=.env" >> $GITHUB_OUTPUT

      - name: Upload .env file
        uses: actions/upload-artifact@v4
        with:
          name: env-file
          path: .env

  docker-build:
    runs-on: ubuntu-latest
    environment: staging
    needs: setup

    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}:${{ env.DEPLOY_ENV }}-latest
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}:${{ env.DEPLOY_ENV }}-${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    environment: staging
    needs: [setup, docker-build]

    steps:
      - name: Download .env file
        uses: actions/download-artifact@v4
        with:
          name: env-file

      - name: Checkout repository (for deploy files)
        uses: actions/checkout@v4

      - name: Setup SSH for SCP
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ env.VPS_SSH_KEY }}

      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ env.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files to VPS
        run: |
          ssh ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "mkdir -p ${{ env.VPS_WORKDIR }}"
          scp .env scripts/deploy.sh docker-compose.yml ${{ env.VPS_USER }}@${{ env.VPS_HOST }}:${{ env.VPS_WORKDIR }}/

      - name: Run deploy script on VPS
        run: |
          ssh ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "
            cd ${{ env.VPS_WORKDIR }}
            chmod +x deploy.sh
            ./deploy.sh
          "
