name: Staging Deploy

on:
  push:
    branches: [dev]



jobs:
  setup:
    runs-on: ubuntu-latest
    environment: staging
    outputs:
      env-file: ${{ steps.create-env.outputs.env-file }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        id: create-env
        run: |
          cat > .env << EOF
          DEPLOY_ENV=${{ vars.DEPLOY_ENV }}
          DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_REPO_NAME=${{ secrets.DOCKERHUB_REPO_NAME }}
          DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}
          VPS_HOST=${{ secrets.VPS_HOST }}
          VPS_USER=${{ secrets.VPS_USER }}
          VPS_WORKDIR=${{ vars.VPS_WORKDIR }}
          DEPLOY_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          EOF

          echo "env-file=.env" >> $GITHUB_OUTPUT

      - name: Upload .env file
        uses: actions/upload-artifact@v4
        with:
          name: env-file
          path: .env

  docker-build:
    runs-on: ubuntu-latest
    environment: staging
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download .env file
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: .

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO_NAME }}:staging-latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO_NAME }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    environment: staging
    needs: [setup, docker-build]

    steps:
      - name: Download .env file
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: .

      - name: Checkout repository (for deploy files)
        uses: actions/checkout@v4

      - name: Setup SSH for SCP
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files to VPS
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p ${{ vars.VPS_WORKDIR }}"
          scp .env scripts/deploy.sh docker-compose.yml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:${{ vars.VPS_WORKDIR }}/

      - name: Run deploy script on VPS
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            cd ${{ vars.VPS_WORKDIR }}
            chmod +x deploy.sh
            ./deploy.sh
          "
